services:
  frontend:
    build:
      context: frontend
    ports:
      - "3000:80"
    restart: always

  gateway:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./content_service/staticfiles:/usr/src/app/staticfiles
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - content-service
      - reservation-service
      - subscription-service

  content-service:
    build:
      context: content_service
    expose:
      - "8000"
    volumes:
      - ./content_service:/usr/src/app
    depends_on:
      mysql:
        condition: service_healthy
    restart: always
    environment:
      DEBUG: True
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: content-service
      MYSQL_USER: db
      MYSQL_PASSWORD: password

  mail-service:
    build:
      context: mail-service
    ports:
      - "50051:50051"
    restart: always
    environment:
      SMTP_HOST:
      SMTP_PORT:
      SMTP_USER:
      SMTP_PASS:
      FROM_EMAIL:

  reservation-service:
    build:
      context: reservation-service
    restart: always
    expose:
      - "1323"
    environment:
      DATABASE_URL: "postgres://postgres:password@postgres-reservation:5432/reservation?sslmode=disable"
    depends_on:
      - postgres-reservation
      - mail-service

  subscription-service:
    build:
      context: subscription-service
    restart: always
    expose:
      - "8080"
    environment:
      DATABASE_URL: "postgres://postgres:password@postgres-subscription:5432/subscription?sslmode=disable"
    depends_on:
      - postgres-subscription
      - mail-service

  mysql:
    image: mysql:9.1
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: content-service
      MYSQL_USER: db
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - ./db-data/mysql/:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD" ]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-reservation:
    image: 'postgres:16.4-alpine'
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: reservation
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  postgres-subscription:
    image: 'postgres:16.4-alpine'
    ports:
      - "5433:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: subscription
    volumes:
      - ./db-data/subscription/:/var/lib/postgresql/data/